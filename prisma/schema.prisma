// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt   @id @default(autoincrement())
  email      String   @unique
  name       String
  password   String
  created_at DateTime @default(now())

  video    Video[]
  comments Comments[]
  likes    Likes[]

  @@index([email, name])
  @@map("Users")
}

model Video {
  id          BigInt  @id @default(autoincrement())
  title       String
  description String  @default("")
  credits     String  @default("")
  likesCount  Int     @default(0) @map("likes_count")
  videoURL    String  @map("video_url")
  isPrivate   Boolean @default(false)

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId BigInt @map("user_id")

  comments Comments[]
  likes    Likes[]

  created_at       DateTime @default(now())
  publication_date DateTime @default(now())

  @@index([likesCount(sort: Desc), authorId(sort: Desc), title(sort: Desc)])
  @@map("Videos")
}

model Comments {
  id         BigInt    @id @default(autoincrement())
  comment    String
  created_at DateTime  @default(now())
  deleted_at DateTime?
  deleted    Boolean   @default(false)

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  userId BigInt?

  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  videoId BigInt

  @@index([userId(sort: Desc), videoId(sort: Desc), created_at(sort: Desc)])
}

model Likes {
  id BigInt @id @default(autoincrement())

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  userId BigInt?

  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  videoId BigInt

  @@index([userId(sort: Desc), videoId(sort: Desc)])
}
